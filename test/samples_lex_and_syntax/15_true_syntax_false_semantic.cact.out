token: [@0,0:2='int',<15>,1:0]
token: [@1,4:4='a',<44>,1:4]
token: [@2,5:5=';',<38>,1:5]
token: [@3,7:9='int',<15>,2:0]
token: [@4,11:15='func1',<44>,2:4]
token: [@5,16:16='(',<20>,2:9]
token: [@6,17:19='int',<15>,2:10]
token: [@7,21:21='a',<44>,2:14]
token: [@8,22:22=')',<21>,2:15]
token: [@9,24:24='{',<24>,3:0]
token: [@10,27:27='a',<44>,4:1]
token: [@11,29:29='=',<40>,4:3]
token: [@12,31:31='a',<44>,4:5]
token: [@13,33:33='-',<31>,4:7]
token: [@14,35:35='1',<45>,4:9]
token: [@15,36:36=';',<38>,4:10]
token: [@16,39:44='return',<16>,5:1]
token: [@17,46:46='a',<44>,5:8]
token: [@18,47:47=';',<38>,5:9]
token: [@19,49:49='}',<25>,6:0]
token: [@20,52:54='int',<15>,8:0]
token: [@21,56:59='main',<44>,8:4]
token: [@22,60:60='(',<20>,8:8]
token: [@23,61:61=')',<21>,8:9]
token: [@24,63:63='{',<24>,9:0]
token: [@25,66:68='int',<15>,10:1]
token: [@26,70:70='b',<44>,10:5]
token: [@27,71:71=';',<38>,10:6]
token: [@28,74:74='b',<44>,11:1]
token: [@29,76:76='=',<40>,11:3]
token: [@30,78:82='func2',<44>,11:5]
token: [@31,83:83='(',<20>,11:10]
token: [@32,84:84='a',<44>,11:11]
token: [@33,85:85=')',<21>,11:12]
token: [@34,86:86=';',<38>,11:13]
token: [@35,89:94='return',<16>,12:1]
token: [@36,96:96='b',<44>,12:8]
token: [@37,97:97=';',<38>,12:9]
token: [@38,99:99='}',<25>,13:0]
token: [@39,101:100='<EOF>',<-1>,14:0]
tree: (compUnit (decl (varDecl (btype int) (varDef a) ;)) (funcDef (funcType (btype int)) func1 ( (funcFParams (funcFParam (btype int) a)) ) (block { (blockItem (stmt (lVal a) = (exp (addExp (mulExp (unaryExp (primaryExp (lVal a)))) - (mulExp (unaryExp (primaryExp (number 1)))))) ;)) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (lVal a)))))) ;)) })) (funcDef (funcType (btype int)) main ( ) (block { (blockItem (decl (varDecl (btype int) (varDef b) ;))) (blockItem (stmt (lVal b) = (exp (addExp (mulExp (unaryExp func2 ( (funcRParams (exp (addExp (mulExp (unaryExp (primaryExp (lVal a))))))) ))))) ;)) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (lVal b)))))) ;)) })) <EOF>)
