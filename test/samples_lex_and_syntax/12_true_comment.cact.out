token: [@0,0:2='int',<15>,1:0]
token: [@1,4:7='main',<44>,1:4]
token: [@2,8:8='(',<20>,1:8]
token: [@3,9:9=')',<21>,1:9]
token: [@4,11:11='{',<24>,2:0]
token: [@5,37:39='int',<15>,4:1]
token: [@6,41:41='a',<44>,4:5]
token: [@7,42:42='[',<22>,4:6]
token: [@8,43:44='10',<45>,4:7]
token: [@9,45:45=']',<23>,4:9]
token: [@10,46:46=';',<38>,4:10]
token: [@11,49:51='int',<15>,5:1]
token: [@12,53:53='i',<44>,5:5]
token: [@13,55:55='=',<40>,5:7]
token: [@14,57:57='3',<45>,5:9]
token: [@15,58:58=';',<38>,5:10]
token: [@16,100:105='return',<16>,11:1]
token: [@17,107:107='i',<44>,11:8]
token: [@18,108:108=';',<38>,11:9]
token: [@19,110:110='}',<25>,12:0]
token: [@20,112:111='<EOF>',<-1>,13:0]
tree: (compUnit (funcDef (funcType (btype int)) main ( ) (block { (blockItem (decl (varDecl (btype int) (varDef a [ 10 ]) ;))) (blockItem (decl (varDecl (btype int) (varDef i = (constInitVal (constExp (number 3)))) ;))) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (lVal i)))))) ;)) })) <EOF>)
