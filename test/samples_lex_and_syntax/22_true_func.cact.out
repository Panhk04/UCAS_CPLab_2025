token: [@0,0:2='int',<15>,1:0]
token: [@1,4:4='a',<44>,1:4]
token: [@2,6:6='=',<40>,1:6]
token: [@3,8:8='0',<45>,1:8]
token: [@4,9:9=',',<39>,1:9]
token: [@5,11:11='b',<44>,1:11]
token: [@6,13:13='=',<40>,1:13]
token: [@7,15:15='1',<45>,1:15]
token: [@8,16:16=';',<38>,1:16]
token: [@9,21:23='int',<15>,3:0]
token: [@10,25:27='foo',<44>,3:4]
token: [@11,28:28='(',<20>,3:7]
token: [@12,29:31='int',<15>,3:8]
token: [@13,33:33='a',<44>,3:12]
token: [@14,34:34=',',<39>,3:13]
token: [@15,36:38='int',<15>,3:15]
token: [@16,40:40='b',<44>,3:19]
token: [@17,41:41=')',<21>,3:20]
token: [@18,44:44='{',<24>,4:0]
token: [@19,48:53='return',<16>,5:1]
token: [@20,55:55='a',<44>,5:8]
token: [@21,57:57='*',<32>,5:10]
token: [@22,59:59='a',<44>,5:12]
token: [@23,60:60=';',<38>,5:13]
token: [@24,63:63='}',<25>,6:0]
token: [@25,68:70='int',<15>,8:0]
token: [@26,72:75='main',<44>,8:4]
token: [@27,76:76='(',<20>,8:8]
token: [@28,77:77=')',<21>,8:9]
token: [@29,80:80='{',<24>,9:0]
token: [@30,84:86='int',<15>,10:1]
token: [@31,88:88='c',<44>,10:5]
token: [@32,89:89=';',<38>,10:6]
token: [@33,96:96='c',<44>,11:4]
token: [@34,98:98='=',<40>,11:6]
token: [@35,100:102='foo',<44>,11:8]
token: [@36,103:103='(',<20>,11:11]
token: [@37,104:104='a',<44>,11:12]
token: [@38,105:105=',',<39>,11:13]
token: [@39,107:107='b',<44>,11:15]
token: [@40,108:108=')',<21>,11:16]
token: [@41,109:109=';',<38>,11:17]
token: [@42,113:118='return',<16>,12:1]
token: [@43,120:120='c',<44>,12:8]
token: [@44,121:121=';',<38>,12:9]
token: [@45,124:124='}',<25>,13:0]
token: [@46,127:126='<EOF>',<-1>,14:0]
tree: (compUnit (decl (varDecl (btype int) (varDef a = (constInitVal (constExp (number 0)))) , (varDef b = (constInitVal (constExp (number 1)))) ;)) (funcDef (funcType (btype int)) foo ( (funcFParams (funcFParam (btype int) a) , (funcFParam (btype int) b)) ) (block { (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (lVal a))) * (unaryExp (primaryExp (lVal a)))))) ;)) })) (funcDef (funcType (btype int)) main ( ) (block { (blockItem (decl (varDecl (btype int) (varDef c) ;))) (blockItem (stmt (lVal c) = (exp (addExp (mulExp (unaryExp foo ( (funcRParams (exp (addExp (mulExp (unaryExp (primaryExp (lVal a)))))) , (exp (addExp (mulExp (unaryExp (primaryExp (lVal b))))))) ))))) ;)) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (lVal c)))))) ;)) })) <EOF>)
