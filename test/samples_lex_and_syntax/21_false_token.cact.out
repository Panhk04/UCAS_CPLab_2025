token: [@0,0:2='int',<15>,1:0]
token: [@1,4:4='a',<44>,1:4]
token: [@2,6:6='=',<40>,1:6]
token: [@3,8:8='2',<45>,1:8]
token: [@4,9:9=';',<38>,1:9]
token: [@5,12:14='int',<15>,3:0]
token: [@6,16:18='foo',<44>,3:4]
token: [@7,19:19='(',<20>,3:7]
token: [@8,20:22='int',<15>,3:8]
token: [@9,24:24='a',<44>,3:12]
token: [@10,25:25=',',<39>,3:13]
token: [@11,27:29='int',<15>,3:15]
token: [@12,31:31='b',<44>,3:19]
token: [@13,32:32='[',<22>,3:20]
token: [@14,33:33=']',<23>,3:21]
token: [@15,34:34=')',<21>,3:22]
token: [@16,36:36='{',<24>,4:0]
token: [@17,39:44='return',<16>,5:1]
token: [@18,46:46='c',<44>,5:8]
token: [@19,47:47=';',<38>,5:9]
token: [@20,49:49='}',<25>,6:0]
token: [@21,52:54='int',<15>,8:0]
token: [@22,56:59='main',<44>,8:4]
token: [@23,60:60='(',<20>,8:8]
token: [@24,61:61=')',<21>,8:9]
token: [@25,63:63='{',<24>,9:0]
token: [@26,69:71='int',<15>,10:4]
token: [@27,73:73='b',<44>,10:8]
token: [@28,74:74='[',<22>,10:9]
token: [@29,75:75='4',<45>,10:10]
token: [@30,76:76=']',<23>,10:11]
token: [@31,77:77=';',<38>,10:12]
token: [@32,83:85='int',<15>,11:4]
token: [@33,87:87='c',<44>,11:8]
token: [@34,88:88=';',<38>,11:9]
token: [@35,94:94='c',<44>,12:4]
token: [@36,96:96='=',<40>,12:6]
token: [@37,98:100='foo',<44>,12:8]
token: [@38,101:101='(',<20>,12:11]
token: [@39,102:102='a',<44>,12:12]
token: [@40,103:103=',',<39>,12:13]
token: [@41,105:105='b',<44>,12:15]
token: [@42,106:106=')',<21>,12:16]
token: [@43,107:107=';',<38>,12:17]
token: [@44,110:115='retunr',<44>,13:1]
token: [@45,117:117='a',<44>,13:8]
token: [@46,118:118=';',<38>,13:9]
token: [@47,120:120='}',<25>,14:0]
token: [@48,122:121='<EOF>',<-1>,15:0]
tree: (compUnit (decl (varDecl (btype int) (varDef a = (constInitVal (constExp (number 2)))) ;)) (funcDef (funcType (btype int)) foo ( (funcFParams (funcFParam (btype int) a) , (funcFParam (btype int) b [ ])) ) (block { (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (lVal c)))))) ;)) })) (funcDef (funcType (btype int)) main ( ) (block { (blockItem (decl (varDecl (btype int) (varDef b [ 4 ]) ;))) (blockItem (decl (varDecl (btype int) (varDef c) ;))) (blockItem (stmt (lVal c) = (exp (addExp (mulExp (unaryExp foo ( (funcRParams (exp (addExp (mulExp (unaryExp (primaryExp (lVal a)))))) , (exp (addExp (mulExp (unaryExp (primaryExp (lVal b))))))) ))))) ;)) (blockItem stmt) (blockItem (stmt retunr)) (blockItem (stmt (exp (addExp (mulExp (unaryExp (primaryExp (lVal a)))))) ;)) })) <EOF>)
