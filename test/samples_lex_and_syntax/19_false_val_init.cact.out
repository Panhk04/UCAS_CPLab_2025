token: [@0,0:2='int',<15>,1:0]
token: [@1,4:4='a',<44>,1:4]
token: [@2,6:6='=',<40>,1:6]
token: [@3,8:8='2',<45>,1:8]
token: [@4,9:9=';',<38>,1:9]
token: [@5,11:15='const',<8>,2:0]
token: [@6,17:19='int',<15>,2:6]
token: [@7,21:21='b',<44>,2:10]
token: [@8,23:23='=',<40>,2:12]
token: [@9,25:25='3',<45>,2:14]
token: [@10,26:26=';',<38>,2:15]
token: [@11,29:31='int',<15>,4:0]
token: [@12,33:36='main',<44>,4:4]
token: [@13,37:37='(',<20>,4:8]
token: [@14,38:38=')',<21>,4:9]
token: [@15,40:40='{',<24>,5:0]
token: [@16,43:45='int',<15>,6:1]
token: [@17,47:47='c',<44>,6:5]
token: [@18,49:49='=',<40>,6:7]
token: [@19,51:51='b',<44>,6:9]
token: [@20,52:52=';',<38>,6:10]
token: [@21,55:60='return',<16>,7:1]
token: [@22,62:62='c',<44>,7:8]
token: [@23,63:63=';',<38>,7:9]
token: [@24,65:65='}',<25>,8:0]
token: [@25,67:66='<EOF>',<-1>,9:0]
tree: (compUnit (decl (varDecl (btype int) (varDef a = (constInitVal (constExp (number 2)))) ;)) (decl (constDecl const (btype int) (constDef b = (constInitVal (constExp (number 3)))) ;)) (funcDef (funcType (btype int)) main ( ) (block { (blockItem (decl (varDecl (btype int) (varDef c = constInitVal) b ;))) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (lVal c)))))) ;)) })) <EOF>)
