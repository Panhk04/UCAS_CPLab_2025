token: [@0,0:2='int',<15>,1:0]
token: [@1,4:7='main',<44>,1:4]
token: [@2,8:8='(',<20>,1:8]
token: [@3,9:9=')',<21>,1:9]
token: [@4,11:11='{',<24>,2:0]
token: [@5,14:16='int',<15>,3:1]
token: [@6,18:18='a',<44>,3:5]
token: [@7,20:20='=',<40>,3:7]
token: [@8,22:22='3',<45>,3:9]
token: [@9,23:23=';',<38>,3:10]
token: [@10,26:28='int',<15>,4:1]
token: [@11,30:30='b',<44>,4:5]
token: [@12,31:31=',',<39>,4:6]
token: [@13,33:33='c',<44>,4:8]
token: [@14,34:34=';',<38>,4:9]
token: [@15,37:37='c',<44>,5:1]
token: [@16,39:39='=',<40>,5:3]
token: [@17,41:41='b',<44>,5:5]
token: [@18,43:43='=',<40>,5:7]
token: [@19,45:45='a',<44>,5:9]
token: [@20,46:46=';',<38>,5:10]
token: [@21,49:54='return',<16>,6:1]
token: [@22,56:56='c',<44>,6:8]
token: [@23,57:57=';',<38>,6:9]
token: [@24,59:59='}',<25>,7:0]
token: [@25,61:60='<EOF>',<-1>,8:0]
tree: (compUnit (funcDef (funcType (btype int)) main ( ) (block { (blockItem (decl (varDecl (btype int) (varDef a = (constInitVal (constExp (number 3)))) ;))) (blockItem (decl (varDecl (btype int) (varDef b) , (varDef c) ;))) (blockItem (stmt (lVal c) = (exp (addExp (mulExp (unaryExp (primaryExp (lVal b)))))) =)) (blockItem (stmt (exp (addExp (mulExp (unaryExp (primaryExp (lVal a)))))) ;)) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (lVal c)))))) ;)) })) <EOF>)
