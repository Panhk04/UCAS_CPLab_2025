token: [@0,0:2='int',<15>,1:0]
token: [@1,4:7='main',<44>,1:4]
token: [@2,8:8='(',<20>,1:8]
token: [@3,9:9=')',<21>,1:9]
token: [@4,10:10='{',<24>,1:10]
token: [@5,17:21='float',<13>,2:4]
token: [@6,23:25='foo',<44>,2:10]
token: [@7,26:26='(',<20>,2:13]
token: [@8,27:27=')',<21>,2:14]
token: [@9,28:28='{',<24>,2:15]
token: [@10,39:44='return',<16>,3:8]
token: [@11,46:49='1.0f',<47>,3:15]
token: [@12,50:50=';',<38>,3:19]
token: [@13,57:57='}',<25>,4:4]
token: [@14,66:71='return',<16>,6:4]
token: [@15,73:73='0',<45>,6:11]
token: [@16,74:74=';',<38>,6:12]
token: [@17,77:77='}',<25>,7:0]
token: [@18,78:77='<EOF>',<-1>,7:1]
tree: (compUnit (funcDef (funcType (btype int)) main ( ) (block { (blockItem (decl (varDecl (btype float) (varDef foo)))) (blockItem (stmt (exp (addExp (mulExp (unaryExp (primaryExp ( (exp (addExp (mulExp unaryExp))) )))))) <missing ';'>)) (blockItem (stmt (block { (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (number 1.0f)))))) ;)) }))) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (number 0)))))) ;)) })) <EOF>)
