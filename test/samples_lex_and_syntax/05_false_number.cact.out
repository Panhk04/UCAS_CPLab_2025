token: [@0,0:2='int',<15>,1:0]
token: [@1,4:7='main',<44>,1:4]
token: [@2,8:8='(',<20>,1:8]
token: [@3,9:9=')',<21>,1:9]
token: [@4,11:11='{',<24>,2:0]
token: [@5,14:18='const',<8>,3:1]
token: [@6,20:22='int',<15>,3:7]
token: [@7,24:24='a',<44>,3:11]
token: [@8,26:26='=',<40>,3:13]
token: [@9,28:28='3',<45>,3:15]
token: [@10,29:29=';',<38>,3:16]
token: [@11,32:36='const',<8>,4:1]
token: [@12,38:40='int',<15>,4:7]
token: [@13,42:42='b',<44>,4:11]
token: [@14,44:44='=',<40>,4:13]
token: [@15,47:47='a',<44>,4:16]
token: [@16,48:48=';',<38>,4:17]
token: [@17,51:56='return',<16>,5:1]
token: [@18,58:58='a',<44>,5:8]
token: [@19,59:59=';',<38>,5:9]
token: [@20,61:61='}',<25>,6:0]
token: [@21,63:62='<EOF>',<-1>,7:0]
tree: (compUnit (funcDef (funcType (btype int)) main ( ) (block { (blockItem (decl (constDecl const (btype int) (constDef a = (constInitVal (constExp (number 3)))) ;))) (blockItem (decl (constDecl const (btype int) (constDef b = constInitVal) a ;))) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (lVal a)))))) ;)) })) <EOF>)
