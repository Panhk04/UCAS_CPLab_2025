token: [@0,0:2='int',<15>,1:0]
token: [@1,4:7='main',<44>,1:4]
token: [@2,8:8='(',<20>,1:8]
token: [@3,9:9=')',<21>,1:9]
token: [@4,11:11='{',<24>,2:0]
token: [@5,14:16='int',<15>,3:1]
token: [@6,18:18='a',<44>,3:5]
token: [@7,19:19='[',<22>,3:6]
token: [@8,20:21='10',<45>,3:7]
token: [@9,22:22=']',<23>,3:9]
token: [@10,23:23=';',<38>,3:10]
token: [@11,26:28='int',<15>,4:1]
token: [@12,30:30='i',<44>,4:5]
token: [@13,31:31=';',<38>,4:6]
token: [@14,34:35='if',<14>,5:1]
token: [@15,36:36='(',<20>,5:3]
token: [@16,37:37='a',<44>,5:4]
token: [@17,38:38='[',<22>,5:5]
token: [@18,39:39='1',<45>,5:6]
token: [@19,40:40=']',<23>,5:7]
token: [@20,42:43='==',<41>,5:9]
token: [@21,45:45='0',<45>,5:12]
token: [@22,46:46=')',<21>,5:13]
token: [@23,50:50='i',<44>,6:2]
token: [@24,52:52='=',<40>,6:4]
token: [@25,54:54='3',<45>,6:6]
token: [@26,55:55=';',<38>,6:7]
token: [@27,59:59='a',<44>,7:2]
token: [@28,60:60='[',<22>,7:3]
token: [@29,61:61='i',<44>,7:4]
token: [@30,62:62=']',<23>,7:5]
token: [@31,64:64='=',<40>,7:7]
token: [@32,66:66='8',<45>,7:9]
token: [@33,67:67=';',<38>,7:10]
token: [@34,70:73='else',<11>,8:1]
token: [@35,77:77='i',<44>,9:2]
token: [@36,79:79='=',<40>,9:4]
token: [@37,81:81='0',<45>,9:6]
token: [@38,82:82=';',<38>,9:7]
token: [@39,85:90='return',<16>,10:1]
token: [@40,92:92='i',<44>,10:8]
token: [@41,93:93=';',<38>,10:9]
token: [@42,95:95='}',<25>,11:0]
token: [@43,97:96='<EOF>',<-1>,12:0]
tree: (compUnit (funcDef (funcType (btype int)) main ( ) (block { (blockItem (decl (varDecl (btype int) (varDef a [ 10 ]) ;))) (blockItem (decl (varDecl (btype int) (varDef i) ;))) (blockItem (stmt if ( (cond (lOrExp (lAndExp (eqExp (relExp (addExp (mulExp (unaryExp (primaryExp (lVal a [ (exp (addExp (mulExp (unaryExp (primaryExp (number 1)))))) ])))))) == (relExp (addExp (mulExp (unaryExp (primaryExp (number 0)))))))))) ) (stmt (lVal i) = (exp (addExp (mulExp (unaryExp (primaryExp (number 3)))))) ;))) (blockItem (stmt (lVal a [ (exp (addExp (mulExp (unaryExp (primaryExp (lVal i)))))) ]) = (exp (addExp (mulExp (unaryExp (primaryExp (number 8)))))) ;)) else (blockItem (stmt (lVal i) = (exp (addExp (mulExp (unaryExp (primaryExp (number 0)))))) ;)) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (lVal i)))))) ;)) })) <EOF>)
