token: [@0,0:4='const',<8>,1:0]
token: [@1,6:10='float',<13>,1:6]
token: [@2,12:12='a',<44>,1:12]
token: [@3,13:13='[',<22>,1:13]
token: [@4,14:14='1',<45>,1:14]
token: [@5,15:15=']',<23>,1:15]
token: [@6,16:16='[',<22>,1:16]
token: [@7,17:17='2',<45>,1:17]
token: [@8,18:18=']',<23>,1:18]
token: [@9,19:19='[',<22>,1:19]
token: [@10,20:20='2',<45>,1:20]
token: [@11,21:21=']',<23>,1:21]
token: [@12,23:23='=',<40>,1:23]
token: [@13,25:25='{',<24>,1:25]
token: [@14,32:32='{',<24>,2:4]
token: [@15,43:43='{',<24>,3:8]
token: [@16,44:47='1.0f',<47>,3:9]
token: [@17,48:48=',',<39>,3:13]
token: [@18,50:53='2.0f',<47>,3:15]
token: [@19,54:54='}',<25>,3:19]
token: [@20,55:55=',',<39>,3:20]
token: [@21,57:57='{',<24>,3:22]
token: [@22,58:60='.3f',<47>,3:23]
token: [@23,61:61=',',<39>,3:26]
token: [@24,63:66='4.0f',<47>,3:28]
token: [@25,67:67='}',<25>,3:32]
token: [@26,74:74='}',<25>,4:4]
token: [@27,77:77='}',<25>,5:0]
token: [@28,78:78=';',<38>,5:1]
token: [@29,83:85='int',<15>,7:0]
token: [@30,87:90='main',<44>,7:4]
token: [@31,91:91='(',<20>,7:8]
token: [@32,92:92=')',<21>,7:9]
token: [@33,93:93='{',<24>,7:10]
token: [@34,100:110='print_float',<44>,8:4]
token: [@35,111:111='(',<20>,8:15]
token: [@36,112:112='a',<44>,8:16]
token: [@37,113:113='[',<22>,8:17]
token: [@38,114:114='0',<45>,8:18]
token: [@39,115:115=']',<23>,8:19]
token: [@40,116:116='[',<22>,8:20]
token: [@41,117:117='0',<45>,8:21]
token: [@42,118:118=']',<23>,8:22]
token: [@43,119:119='[',<22>,8:23]
token: [@44,120:120='0',<45>,8:24]
token: [@45,121:121=']',<23>,8:25]
token: [@46,122:122=')',<21>,8:26]
token: [@47,123:123=';',<38>,8:27]
token: [@48,130:135='return',<16>,9:4]
token: [@49,137:137='0',<45>,9:11]
token: [@50,138:138=';',<38>,9:12]
token: [@51,141:141='}',<25>,10:0]
token: [@52,142:141='<EOF>',<-1>,10:1]
tree: (compUnit (decl (constDecl const (btype float) (constDef a [ 1 ] [ 2 ] [ 2 ] = (constInitVal { (constInitVal { (constInitVal { (constInitVal (constExp (number 1.0f))) , (constInitVal (constExp (number 2.0f))) }) , (constInitVal { (constInitVal (constExp (number .3f))) , (constInitVal (constExp (number 4.0f))) }) }) })) ;)) (funcDef (funcType (btype int)) main ( ) (block { (blockItem (stmt (exp (addExp (mulExp (unaryExp print_float ( (funcRParams (exp (addExp (mulExp (unaryExp (primaryExp (lVal a [ (exp (addExp (mulExp (unaryExp (primaryExp (number 0)))))) ] [ (exp (addExp (mulExp (unaryExp (primaryExp (number 0)))))) ] [ (exp (addExp (mulExp (unaryExp (primaryExp (number 0)))))) ]))))))) ))))) ;)) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (number 0)))))) ;)) })) <EOF>)
