token: [@0,0:2='int',<15>,1:0]
token: [@1,4:7='main',<44>,1:4]
token: [@2,8:8='(',<20>,1:8]
token: [@3,9:9=')',<21>,1:9]
token: [@4,11:11='{',<24>,2:0]
token: [@5,14:16='int',<15>,3:1]
token: [@6,18:18='n',<44>,3:5]
token: [@7,20:20='=',<40>,3:7]
token: [@8,22:25='0x3f',<45>,3:9]
token: [@9,26:26='G',<44>,3:13]
token: [@10,27:27=';',<38>,3:14]
token: [@11,30:35='return',<16>,4:1]
token: [@12,37:37='0',<45>,4:8]
token: [@13,38:38=';',<38>,4:9]
token: [@14,40:40='}',<25>,5:0]
token: [@15,42:41='<EOF>',<-1>,6:0]
tree: (compUnit (funcDef (funcType (btype int)) main ( ) (block { (blockItem (decl (varDecl (btype int) (varDef n = (constInitVal (constExp (number 0x3f)))) G ;))) (blockItem (stmt return (exp (addExp (mulExp (unaryExp (primaryExp (number 0)))))) ;)) })) <EOF>)
